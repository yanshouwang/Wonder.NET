<UserControl
    x:Class="Wonder.UWP.Views.LECharacteristicView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Wonder.UWP.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:converters="using:Wonder.UWP.Converters"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400">
    <UserControl.Resources>
        <converters:BoolReverseConverter x:Key="BoolReverseConverter"/>
    </UserControl.Resources>
    <Grid RowSpacing="12">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Orientation="Horizontal" Spacing="12">
            <Button Content="打开通知" Style="{StaticResource ButtonRevealStyle}"
                    Command="{x:Bind ViewModel.StartNotificationCommand}"/>
            <Button Content="关闭通知" Style="{StaticResource ButtonRevealStyle}"
                    Command="{x:Bind ViewModel.StopNotificationCommand}"/>
        </StackPanel>
        <TextBox x:Name="ValueTBX" Grid.Row="1" CornerRadius="0"
                 TextWrapping="Wrap"
                 Text="{x:Bind ViewModel.Value, Mode=TwoWay}"/>
        <Button Grid.Row="1" Content="&#xE76D;"
                FontFamily="Segoe MDL2 Assets"
                FontSize="24"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                Margin="12"
                Width="40"
                Height="40"
                CornerRadius="20"
                Padding="0"
                Command="{x:Bind ViewModel.WriteCommand}">
            <i:Interaction.Behaviors>
                <ic:DataTriggerBehavior Binding="{x:Bind LoopWriteCBX.IsChecked, Mode=OneWay}" Value="True">
                    <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed"/>
                </ic:DataTriggerBehavior>
                <ic:DataTriggerBehavior Binding="{x:Bind LoopWriteCBX.IsChecked, Mode=OneWay}" Value="False">
                    <ic:ChangePropertyAction PropertyName="Visibility" Value="Visible"/>
                </ic:DataTriggerBehavior>
            </i:Interaction.Behaviors>
        </Button>
        <Button Grid.Row="1" Content="&#xE768;"
                FontFamily="Segoe MDL2 Assets"
                FontSize="24"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                Margin="12"
                Width="40"
                Height="40"
                CornerRadius="20"
                Padding="0"
                Command="{x:Bind ViewModel.WriteCommand}"
                Visibility="{x:Bind LoopWriteCBX.IsChecked, Mode=OneWay}">
            <Button.Style>
                <Style TargetType="Button" BasedOn="{StaticResource ButtonRevealStyle}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </Style>
            </Button.Style>
            <i:Interaction.Behaviors>
                <ic:DataTriggerBehavior Binding="{x:Bind ViewModel.IsLoopWriting}" Value="True">
                    <ic:ChangePropertyAction PropertyName="Content" Value="&#xE71A;"/>
                </ic:DataTriggerBehavior>
                <ic:DataTriggerBehavior Binding="{x:Bind ViewModel.IsLoopWriting}" Value="False">
                    <ic:ChangePropertyAction PropertyName="Content" Value="&#xE768;"/>
                </ic:DataTriggerBehavior>
            </i:Interaction.Behaviors>
        </Button>
        <StackPanel Grid.Row="2" Orientation="Horizontal" Spacing="12">
            <CheckBox x:Name="LoopWriteCBX" Grid.Column="0" Content="循环发送" CornerRadius="0"
                      IsChecked="{x:Bind ViewModel.IsLoopWriteEnabled, Mode=TwoWay}"
                      IsEnabled="{x:Bind ViewModel.IsLoopWriting, Mode=OneWay, Converter={StaticResource BoolReverseConverter}}"/>
            <TextBlock Grid.Column="1" Text="发送间隔（ms）" VerticalAlignment="Center"/>
            <TextBox x:Name="IntervalTBX" Grid.Column="2" CornerRadius="0" Width="120" VerticalAlignment="Center"
                     InputScope="Number"
                     Text="{x:Bind ViewModel.Interval, Mode=TwoWay}"
                     IsEnabled="{x:Bind ViewModel.IsLoopWriting, Mode=OneWay, Converter={StaticResource BoolReverseConverter}}">
                <TextBox.Resources>
                    <Thickness x:Key="TextControlBorderThemeThickness">0,0,0,1</Thickness>
                    <Thickness x:Key="TextControlBorderThemeThicknessFocused">0,0,0,1</Thickness>
                </TextBox.Resources>
            </TextBox>
        </StackPanel>
        <StackPanel Grid.Row="3" Orientation="Horizontal" Spacing="12">
            <Button Grid.Column="0" Content="开始测试"
                    Command="{x:Bind ViewModel.StartStressWriteCommand}"/>
            <Button Grid.Column="1" Content="停止测试"
                    Command="{x:Bind ViewModel.StopStressWriteCommand}"/>
        </StackPanel>
    </Grid>
</UserControl>
