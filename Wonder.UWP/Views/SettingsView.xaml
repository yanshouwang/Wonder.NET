<Page
    x:Class="Wonder.UWP.Views.SettingsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Wonder.UWP.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mvvm="using:Prism.Windows.Mvvm"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:muxm="using:Microsoft.UI.Xaml.Media"
    xmlns:mutc="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:xaml="using:Wonder.UWP.Xaml"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:converters="using:Wonder.UWP.Converters"
    mc:Ignorable="d"
    mvvm:ViewModelLocator.AutoWireViewModel="True"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
    <Page.Resources>
        <xaml:ThemeMode x:Key="Light">Light</xaml:ThemeMode>
        <xaml:ThemeMode x:Key="Dark">Dark</xaml:ThemeMode>
        <xaml:ThemeMode x:Key="System">System</xaml:ThemeMode>
        <converters:EnumToBoolConverter x:Key="IsLightConverter" Target="{StaticResource Light}"/>
        <converters:EnumToBoolConverter x:Key="IsDarkConverter" Target="{StaticResource Dark}"/>
        <converters:EnumToBoolConverter x:Key="IsSystemConverter" Target="{StaticResource System}"/>
        <converters:ColorToBrushConverter x:Key="ColorToBrushConverter"/>
        <converters:SelectionChangedEventArgsToSelectedItemConverter x:Key="SelectionChangedEventArgsToSelectedItemConverter"/>
        <Style x:Name="HorizontalListViewRepeatButtonStyle" TargetType="RepeatButton"
               BasedOn="{StaticResource RepeatButtonRevealStyle}">
            <Setter Property="Background" Value="{ThemeResource TabViewItemHeaderBackground}"/>
            <Setter Property="Padding" Value="{ThemeResource TabViewItemScrollButtonPadding}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Delay" Value="50"/>
            <Setter Property="Interval" Value="100"/>
        </Style>
        <Style x:Key="HorizontalListViewItemContainerStyle" TargetType="ListViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="Background" Value="{ThemeResource ListViewItemBackground}"/>
            <Setter Property="Foreground" Value="{ThemeResource ListViewItemForeground}"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}"/>
            <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}"/>
            <Setter Property="AllowDrop" Value="False"/>
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
            <Setter Property="FocusVisualMargin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ListViewItemPresenter x:Name="Root"
                                           CheckBrush="{ThemeResource ListViewItemCheckBrush}"
                                           ContentMargin="{TemplateBinding Padding}"
                                           CheckBoxBrush="{ThemeResource ListViewItemCheckBoxBrush}"
                                           ContentTransitions="{TemplateBinding ContentTransitions}"
                                           CheckMode="{ThemeResource ListViewItemCheckMode}"
                                           DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                                           DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                                           DragBackground="{ThemeResource ListViewItemDragBackground}"
                                           DragForeground="{ThemeResource ListViewItemDragForeground}"
                                           FocusBorderBrush="{ThemeResource ListViewItemFocusBorderBrush}"
                                           FocusVisualMargin="{TemplateBinding FocusVisualMargin}"
                                           FocusSecondaryBorderBrush="{ThemeResource ListViewItemFocusSecondaryBorderBrush}"
                                           HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           Control.IsTemplateFocusTarget="True"
                                           PressedBackground="{ThemeResource ListViewItemBackgroundPressed}"
                                           PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackground}"
                                           PointerOverForeground="{ThemeResource ListViewItemForegroundPointerOver}"
                                           PointerOverBackground="{ThemeResource ListViewItemBackgroundPointerOver}"
                                           RevealBorderThickness="{ThemeResource ListViewItemRevealBorderThemeThickness}"
                                           ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                           RevealBorderBrush="{ThemeResource ListViewItemRevealBorderBrush}"
                                           RevealBackground="{ThemeResource ListViewItemRevealBackground}"
                                           SelectedForeground="{ThemeResource ListViewItemForegroundSelected}"
                                           SelectionCheckMarkVisualEnabled="{ThemeResource ListViewItemSelectionCheckMarkVisualEnabled}"
                                           SelectedBackground="{ThemeResource ListViewItemBackgroundSelected}"
                                           SelectedPressedBackground="{ThemeResource ListViewItemBackgroundSelectedPressed}"
                                           SelectedPointerOverBackground="{ThemeResource ListViewItemBackgroundSelectedPointerOver}"
                                           VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ListViewItemPresenter.Resources>
                                <ResourceDictionary>
                                    <ResourceDictionary.ThemeDictionaries>
                                        <ResourceDictionary x:Key="Default">
                                            <muxm:RevealBorderBrush x:Key="SystemControlHighlightAccentRevealBorderBrush"
                                                                TargetTheme="Light"
                                                                Color="{ThemeResource SystemAccentColorDark3}"
                                                                FallbackColor="{ThemeResource SystemAccentColorDark3}"/>
                                            <StaticResource x:Key="ListViewItemRevealBorderBrushPointerOver" ResourceKey="SystemControlHighlightAccentRevealBorderBrush"/>
                                            <StaticResource x:Key="ListViewItemRevealBorderBrushPressed" ResourceKey="SystemControlHighlightAccentRevealBorderBrush"/>
                                            <StaticResource x:Key="ListViewItemBorderBrushPressed" ResourceKey="SystemAccentColorDark3Brush"/>
                                        </ResourceDictionary>
                                        <ResourceDictionary x:Key="HighContrast">
                                            <StaticResource x:Key="ListViewItemRevealBorderBrushPointerOver" ResourceKey="SystemControlHighlightAccentRevealBorderBrush"/>
                                            <StaticResource x:Key="ListViewItemRevealBorderBrushPressed" ResourceKey="SystemControlHighlightAccentRevealBorderBrush"/>
                                        </ResourceDictionary>
                                    </ResourceDictionary.ThemeDictionaries>
                                </ResourceDictionary>
                            </ListViewItemPresenter.Resources>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Selected">
                                        <VisualState.Setters>
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="PointerOver"/>
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPointerOver}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverSelected">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="PointerOver"/>
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPointerOver}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverPressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PressedSelected">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DisabledStates">
                                    <VisualState x:Name="Enabled"/>
                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="Root.RevealBorderThickness" Value="0"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </ListViewItemPresenter>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="HorizontalListViewStyle" TargetType="ListView">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="TabNavigation" Value="Once"/>
            <Setter Property="IsSwipeEnabled" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Enabled"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="True"/>
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="False"/>
            <Setter Property="ScrollViewer.ZoomMode" Value="Disabled"/>
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
            <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True"/>
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
            <Setter Property="ItemContainerStyle" Value="{StaticResource HorizontalListViewItemContainerStyle}"/>
            <Setter Property="ItemContainerTransitions">
                <Setter.Value>
                    <TransitionCollection>
                        <AddDeleteThemeTransition/>
                        <ContentThemeTransition/>
                        <ReorderThemeTransition/>
                        <EntranceThemeTransition IsStaggeringEnabled="False"/>
                    </TransitionCollection>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <ItemsStackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListView">
                        <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                            <ScrollViewer x:Name="ScrollViewer"
                                      AutomationProperties.AccessibilityView="Raw"
                                      BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                      IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                      IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}"
                                      IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                                      IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                                      IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}"
                                      TabNavigation="{TemplateBinding TabNavigation}"
                                      VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                      ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
                                <ItemsPresenter Footer="{TemplateBinding Footer}"
                                            FooterTransitions="{TemplateBinding FooterTransitions}"
                                            FooterTemplate="{TemplateBinding FooterTemplate}"
                                            Header="{TemplateBinding Header}"
                                            HeaderTransitions="{TemplateBinding HeaderTransitions}"
                                            HeaderTemplate="{TemplateBinding HeaderTemplate}"
                                            Padding="{TemplateBinding Padding}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    <StackPanel Orientation="Vertical" Margin="12" Spacing="32"
                HorizontalAlignment="Center"
                VerticalAlignment="Center">
        <mutc:HeaderedItemsControl>
            <mutc:HeaderedItemsControl.Header>
                <TextBlock x:Uid="ThemeModeTBK" FontSize="20" TextAlignment="Center"
                           Style="{StaticResource SubheaderTextBlockStyle}"/>
            </mutc:HeaderedItemsControl.Header>
            <mutc:HeaderedItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Spacing="40"/>
                </ItemsPanelTemplate>
            </mutc:HeaderedItemsControl.ItemsPanel>
            <RadioButton x:Uid="LightRBN" GroupName="Theme"
                         IsChecked="{x:Bind ViewModel.ThemeMode, Mode=OneWay, Converter={StaticResource IsLightConverter}}"
                         Command="{x:Bind ViewModel.SetThemeModeCommand}"
                         CommandParameter="{StaticResource Light}"/>
            <RadioButton x:Uid="DarkRBN" GroupName="Theme"
                         IsChecked="{x:Bind ViewModel.ThemeMode, Mode=OneWay, Converter={StaticResource IsDarkConverter}}"
                         Command="{x:Bind ViewModel.SetThemeModeCommand}"
                         CommandParameter="{StaticResource Dark}"/>
            <RadioButton x:Uid="SystemRBN" GroupName="Theme"
                         IsChecked="{x:Bind ViewModel.ThemeMode, Mode=OneWay, Converter={StaticResource IsSystemConverter}}"
                         Command="{x:Bind ViewModel.SetThemeModeCommand}"
                         CommandParameter="{StaticResource System}"/>
        </mutc:HeaderedItemsControl>
        <mutc:HeaderedContentControl>
            <mutc:HeaderedContentControl.Header>
                <Grid>
                    <TextBlock x:Uid="ThemeColorTBK" FontSize="20" TextAlignment="Center"
                               Style="{StaticResource SubheaderTextBlockStyle}"/>
                </Grid>
            </mutc:HeaderedContentControl.Header>
            <Grid HorizontalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <RepeatButton Grid.Column="0" Content="&#xE76B;" Style="{StaticResource HorizontalListViewRepeatButtonStyle}"/>
                <ListView x:Name="ColorsLVW" Grid.Column="1" Style="{StaticResource HorizontalListViewStyle}"
                          Width="200">
                    <i:Interaction.Behaviors>
                        <ic:EventTriggerBehavior EventName="SelectionChanged">
                            <ic:InvokeCommandAction Command="{x:Bind ViewModel.SetThemeColorCommand}"
                                                    InputConverter="{StaticResource SelectionChangedEventArgsToSelectedItemConverter}"/>
                        </ic:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="Color">
                            <Rectangle Width="40" Height="40" Fill="{x:Bind Converter={StaticResource ColorToBrushConverter}}"/>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <Color>#ABCDEF</Color>
                    <Color>#BCDEFA</Color>
                    <Color>#CDEFAB</Color>
                    <Color>#DEFABC</Color>
                    <Color>#EFABCD</Color>
                    <Color>#FABCDE</Color>
                    <Color>#ABCDEF</Color>
                    <Color>#BCDEFA</Color>
                    <Color>#CDEFAB</Color>
                    <Color>#DEFABC</Color>
                    <Color>#EFABCD</Color>
                    <Color>#FABCDE</Color>
                    <Color>#ABCDEF</Color>
                    <Color>#BCDEFA</Color>
                    <Color>#CDEFAB</Color>
                    <Color>#DEFABC</Color>
                    <Color>#EFABCD</Color>
                    <Color>#FABCDE</Color>
                </ListView>
                <RepeatButton Grid.Column="2" Content="&#xE76C;" Style="{StaticResource HorizontalListViewRepeatButtonStyle}"/>
            </Grid>
        </mutc:HeaderedContentControl>
        <mutc:HeaderedItemsControl>
            <mutc:HeaderedItemsControl.Header>
                <TextBlock x:Uid="AboutTBK" FontSize="20" TextAlignment="Center"
                           Style="{StaticResource SubheaderTextBlockStyle}"/>
            </mutc:HeaderedItemsControl.Header>
            <mutc:HeaderedItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical" Spacing="8"/>
                </ItemsPanelTemplate>
            </mutc:HeaderedItemsControl.ItemsPanel>
            <TextBlock TextAlignment="Center">
                <Run Text="{x:Bind ViewModel.DisplayName}"/>
                <Run Text="-"/>
                <Run Text="{x:Bind ViewModel.Version}"/>
            </TextBlock>
            <TextBlock x:Uid="DescriptionTBK" TextAlignment="Center" TextWrapping="Wrap"/>
            <TextBlock TextAlignment="Center">
                <Hyperlink x:Uid="SourceHLK">
                    <Run x:Uid="SourceRUN"/>
                </Hyperlink>
                <Run Text="-"/>
                <Hyperlink x:Uid="LicenseHLK">
                    <Run x:Uid="LicenseRUN"/>
                </Hyperlink>
            </TextBlock>
        </mutc:HeaderedItemsControl>
    </StackPanel>
</Page>
