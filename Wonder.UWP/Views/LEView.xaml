<Page
    x:Class="Wonder.UWP.Views.LEView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Wonder.UWP.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:mvvm="using:Prism.Windows.Mvvm"
    xmlns:vm="using:Wonder.UWP.ViewModels"
    xmlns:converters="using:Wonder.UWP.Converters"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d"
    mvvm:ViewModelLocator.AutoWireViewModel="True"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
    <Page.Resources>
        <SolidColorBrush x:Key="ToggleButtonRevealBackground" Color="Transparent"></SolidColorBrush>
        <SolidColorBrush x:Key="ToggleButtonRevealBackgroundDisabled" Color="Transparent"></SolidColorBrush>
        <converters:UlongToMACConverter x:Key="UlongToMACConverter"/>
        <converters:LEDeviceStateToBoolStateConverter x:Key="LEDeviceStateToIsConnectedConverter"/>
        <Style x:Key="TreeViewItemContainerStyle" TargetType="ListViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="Background" Value="{ThemeResource ListViewItemBackground}"/>
            <Setter Property="Foreground" Value="{ThemeResource ListViewItemForeground}"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="Padding" Value="12,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}"/>
            <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}"/>
            <Setter Property="AllowDrop" Value="False"/>
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
            <Setter Property="FocusVisualMargin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ListViewItemPresenter x:Name="Root" CheckBrush="{ThemeResource ListViewItemCheckBrush}"
                                               ContentMargin="{TemplateBinding Padding}"
                                               CheckBoxBrush="{ThemeResource ListViewItemCheckBoxBrush}"
                                               ContentTransitions="{TemplateBinding ContentTransitions}"
                                               CheckMode="{ThemeResource ListViewItemCheckMode}"
                                               DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                                               DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                                               DragBackground="{ThemeResource ListViewItemDragBackground}"
                                               DragForeground="{ThemeResource ListViewItemDragForeground}"
                                               FocusBorderBrush="{ThemeResource ListViewItemFocusBorderBrush}"
                                               FocusVisualMargin="{TemplateBinding FocusVisualMargin}"
                                               FocusSecondaryBorderBrush="{ThemeResource ListViewItemFocusSecondaryBorderBrush}"
                                               HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               Control.IsTemplateFocusTarget="True"
                                               PressedBackground="{ThemeResource ListViewItemBackgroundPressed}"
                                               PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackground}"
                                               PointerOverForeground="{ThemeResource ListViewItemForegroundPointerOver}"
                                               PointerOverBackground="{ThemeResource ListViewItemBackgroundPointerOver}"
                                               RevealBorderThickness="{ThemeResource ListViewItemRevealBorderThemeThickness}"
                                               ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                               RevealBorderBrush="{ThemeResource ListViewItemRevealBorderBrush}"
                                               RevealBackground="{ThemeResource ListViewItemRevealBackground}"
                                               SelectedForeground="{ThemeResource ListViewItemForegroundSelected}"
                                               SelectionCheckMarkVisualEnabled="{ThemeResource ListViewItemSelectionCheckMarkVisualEnabled}"
                                               SelectedBackground="{ThemeResource ListViewItemBackgroundSelected}"
                                               SelectedPressedBackground="{ThemeResource ListViewItemBackgroundSelectedPressed}"
                                               SelectedPointerOverBackground="{ThemeResource ListViewItemBackgroundSelectedPointerOver}"
                                               VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Selected"/>
                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="PointerOver"/>
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPointerOver}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverSelected">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="PointerOver"/>
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPointerOver}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverPressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PressedSelected">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DisabledStates">
                                    <VisualState x:Name="Enabled"/>
                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="Root.RevealBorderThickness" Value="0"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </ListViewItemPresenter>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="DeviceTemplate" x:DataType="local:LENode">
            <muxc:TreeViewItem ItemsSource="{Binding Nodes}" HorizontalContentAlignment="Stretch">
                <muxc:TreeViewItem.Content>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Row="0" Text="{Binding Value.Name}" Style="{StaticResource SubtitleTextBlockStyle}"/>
                        <TextBlock Grid.Row="1" Text="{Binding Value.Address, Converter={StaticResource UlongToMACConverter}}" Foreground="Gray"/>
                        <TextBlock Grid.Column="1" Grid.RowSpan="2" Text="{Binding Value.RSSI}" Style="{StaticResource TitleTextBlockStyle}" VerticalAlignment="Center"/>
                    </Grid>
                </muxc:TreeViewItem.Content>
            </muxc:TreeViewItem>
        </DataTemplate>
        <DataTemplate x:Key="ServiceTemplate" x:DataType="local:LENode">
            <muxc:TreeViewItem ItemsSource="{Binding Nodes}"
                               Content="{Binding Value.UUID, Converter={StaticResource GUIDToStringConverter}}"
                               HorizontalContentAlignment="Stretch"/>
        </DataTemplate>
        <DataTemplate x:Key="CharacteristicTemplate" x:DataType="local:LENode">
            <muxc:TreeViewItem ItemsSource="{Binding Nodes}"
                               HorizontalContentAlignment="Stretch">
                <muxc:TreeViewItem.Content>
                    <TextBlock Text="{Binding Value.UUID, Converter={StaticResource GUIDToStringConverter}}"/>
                </muxc:TreeViewItem.Content>
            </muxc:TreeViewItem>
        </DataTemplate>
        <local:LEDataTemplateSelector x:Key="LEDataTemplateSelector"
                                      Device="{StaticResource DeviceTemplate}"
                                      Service="{StaticResource ServiceTemplate}"
                                      Characteristic="{StaticResource CharacteristicTemplate}"/>
    </Page.Resources>
    <Grid ColumnSpacing="12" Margin="12">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" MinWidth="320"/>
            <ColumnDefinition Width="4*"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0" RowSpacing="12">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Orientation="Horizontal" Spacing="12">
                <Button Content="开始搜索" Style="{StaticResource ButtonRevealStyle}"
                        Command="{Binding StartScanCommand}"/>
                <Button Content="停止搜索" Style="{StaticResource ButtonRevealStyle}"
                        Command="{Binding StopScanCommand}"/>
            </StackPanel>
            <ComboBox x:Name="DevicesCBX" Grid.Row="1"
                      ItemsSource="{x:Bind ViewModel.Devices, Mode=OneWay}"
                      Header="选择设备"
                      SelectionChanged="DevicesCBX_SelectionChanged">
                <ComboBox.ItemTemplate>
                    <DataTemplate x:DataType="vm:LEDeviceViewModel">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Row="0" Text="{x:Bind Name}" Style="{StaticResource SubtitleTextBlockStyle}"/>
                            <TextBlock Grid.Row="1" Text="{x:Bind Address, Converter={StaticResource UlongToMACConverter}}" Foreground="Gray"/>
                            <TextBlock Grid.Column="1" Grid.RowSpan="2" Text="{x:Bind RSSI, Mode=OneWay}"
                                       Style="{StaticResource TitleTextBlockStyle}"
                                       VerticalAlignment="Center"/>
                        </Grid>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <ContentControl x:Name="DeviceView" Grid.Row="2"
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Stretch">
                <local:LEDeviceView/>
            </ContentControl>
        </Grid>
        <ContentControl x:Name="LoggerView" Grid.Column="1"
                        HorizontalContentAlignment="Stretch"
                        VerticalContentAlignment="Stretch">
            <local:LELoggerView/>
        </ContentControl>
    </Grid>
</Page>
